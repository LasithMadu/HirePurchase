{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Asus\\\\Desktop\\\\Money360 - Master\\\\money360\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Asus\\\\Desktop\\\\Money360 - Master\\\\money360\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Asus\\\\Desktop\\\\Money360 - Master\\\\money360\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Asus\\\\Desktop\\\\Money360 - Master\\\\money360\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Asus\\\\Desktop\\\\Money360 - Master\\\\money360\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\Money360 - Master\\\\money360\\\\src\\\\Component\\\\Users\\\\UI\\\\SuperAdmin\\\\SettingsComponent\\\\SubSettings\\\\LogoUpload.jsx\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport ImgCrop from \"antd-img-crop\";\nimport { Upload, Icon, message } from \"antd\";\nimport \"antd/dist/antd.css\";\nvar styleSheet = {\n  dropzone: {\n    backgroundColor: '#fcfcfc',\n    height: '200px',\n    color: '#000000'\n  }\n};\n\nfunction getBase64(img, callback) {\n  var reader = new FileReader();\n  reader.addEventListener('load', function () {\n    return callback(reader.result);\n  });\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  var isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n\n  var isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nvar LogoUpload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogoUpload, _Component);\n\n  function LogoUpload(props) {\n    var _this;\n\n    _classCallCheck(this, LogoUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogoUpload).call(this, props));\n    _this.state = {\n      loading: false\n    };\n\n    _this.handleChange = function (info) {\n      if (info.file.status === 'uploading') {\n        _this.setState({\n          loading: true\n        });\n\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, function (imageUrl) {\n          return _this.setState({\n            imageUrl: imageUrl,\n            loading: false\n          });\n        }); // var file = [this.state.imageUrl];\n        // axios.post('http://localhost:8080/uploadimage',{\n        //     url: file\n        // })\n        // .then(function (response) {\n        //     console.log(response)\n        // })\n        // .catch(function (error) {\n        //     console.log(error)\n        // });\n      }\n\n      console.log(_this.state.imageUrl);\n    };\n\n    return _this;\n  }\n\n  _createClass(LogoUpload, [{\n    key: \"render\",\n    value: function render() {\n      var uploadButton = React.createElement(\"div\", {\n        className: \"plusbtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: this.state.loading ? 'loading' : 'plus',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Upload\"));\n      var imageUrl = this.state.imageUrl;\n      return React.createElement(\"div\", {\n        className: \"bg-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropzone bg-white\",\n        style: styleSheet.dropzone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"imageuplo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(ImgCrop, {\n        width: 250,\n        height: 75,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        name: \"avatar\",\n        listType: \"picture-card\",\n        className: \"avatar-uploader\",\n        showUploadList: false,\n        action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n        beforeUpload: beforeUpload,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, imageUrl ? React.createElement(\"img\", {\n        src: imageUrl,\n        alt: \"avatar\",\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }) : uploadButton)))));\n    }\n  }]);\n\n  return LogoUpload;\n}(Component);\n\nexport { LogoUpload as default };","map":{"version":3,"sources":["C:\\Users\\Asus\\Desktop\\Money360 - Master\\money360\\src\\Component\\Users\\UI\\SuperAdmin\\SettingsComponent\\SubSettings\\LogoUpload.jsx"],"names":["React","Component","$","axios","ReactDOM","ImgCrop","Upload","Icon","message","styleSheet","dropzone","backgroundColor","height","color","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","LogoUpload","props","state","loading","handleChange","info","status","setState","originFileObj","imageUrl","console","log","uploadButton","width"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\nimport axios from 'axios'\r\nimport ReactDOM from \"react-dom\";\r\nimport ImgCrop from \"antd-img-crop\";\r\nimport { Upload, Icon, message } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst styleSheet = {\r\n    dropzone: {\r\n        backgroundColor: '#fcfcfc',\r\n        height: '200px',\r\n        color: '#000000',\r\n    }\r\n}\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n  \r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n\r\nexport default class LogoUpload extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    handleChange = info => {\r\n        if (info.file.status === 'uploading') {\r\n            this.setState({ loading: true });\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n            // Get this url from response in real world.\r\n            getBase64(info.file.originFileObj, imageUrl =>\r\n                this.setState({\r\n                    imageUrl,\r\n                    loading: false,\r\n                }),\r\n            );\r\n            // var file = [this.state.imageUrl];\r\n\r\n            // axios.post('http://localhost:8080/uploadimage',{\r\n            //     url: file\r\n            // })\r\n            // .then(function (response) {\r\n            //     console.log(response)\r\n            // })\r\n            // .catch(function (error) {\r\n            //     console.log(error)\r\n            // });\r\n        }\r\n\r\n        console.log(this.state.imageUrl)\r\n    };\r\n\r\n    render(){\r\n\r\n        const uploadButton = (\r\n            <div className=\"plusbtn\">\r\n              <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n              <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n          );\r\n          const { imageUrl } = this.state;\r\n\r\n        return(\r\n            <div className=\"bg-white\">\r\n                <div className='dropzone bg-white' style={styleSheet.dropzone}>\r\n                    <div className=\"imageuplo\">\r\n                        <ImgCrop width={250} height={75}>\r\n                            <Upload\r\n                                name=\"avatar\"\r\n                                listType=\"picture-card\"\r\n                                className=\"avatar-uploader\"\r\n                                showUploadList={false}\r\n                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                beforeUpload={beforeUpload}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                            </Upload>\r\n                        </ImgCrop>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}