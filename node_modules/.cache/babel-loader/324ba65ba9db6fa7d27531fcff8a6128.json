{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\Money360 - Master\\\\money360\\\\src\\\\Component\\\\Users\\\\UI\\\\SuperAdmin\\\\SettingsComponent\\\\SubSettings\\\\LogoUpload.jsx\";\nimport React, { Component } from 'react';\nimport { FilePond } from 'react-filepond';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { Upload, Icon, message } from 'antd';\nconst styleSheet = {\n  dropzone: {\n    backgroundColor: '#fcfcfc',\n    height: '200px',\n    color: '#000000'\n  }\n};\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nexport default class LogoUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false\n    };\n\n    this.handleChange = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl,\n          loading: false\n        }));\n      }\n    };\n  }\n\n  render() {\n    const uploadButton = React.createElement(\"div\", {\n      className: \"plusbtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: this.state.loading ? 'loading' : 'plus',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Upload\"));\n    const imageUrl = this.state.imageUrl;\n    return React.createElement(\"div\", {\n      className: \"bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropzone bg-white\",\n      style: styleSheet.dropzone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"imageuplo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Upload, {\n      name: \"avatar\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      beforeUpload: beforeUpload,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, imageUrl ? React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }) : uploadButton))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Asus\\Desktop\\Money360 - Master\\money360\\src\\Component\\Users\\UI\\SuperAdmin\\SettingsComponent\\SubSettings\\LogoUpload.jsx"],"names":["React","Component","FilePond","$","axios","Upload","Icon","message","styleSheet","dropzone","backgroundColor","height","color","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","LogoUpload","constructor","props","state","loading","handleChange","info","status","setState","originFileObj","imageUrl","render","uploadButton","width"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,MAAtC;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,eAAe,EAAE,SADX;AAENC,IAAAA,MAAM,EAAE,OAFF;AAGNC,IAAAA,KAAK,EAAE;AAHD;AADK,CAAnB;;AAQA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAC9B,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAR,CAA9C;AACAH,EAAAA,MAAM,CAACI,aAAP,CAAqBN,GAArB;AACD;;AAED,SAASO,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,QAAMC,UAAU,GAAGD,IAAI,CAACE,IAAL,KAAc,YAAd,IAA8BF,IAAI,CAACE,IAAL,KAAc,WAA/D;;AACA,MAAI,CAACD,UAAL,EAAiB;AACfhB,IAAAA,OAAO,CAACkB,KAAR,CAAc,mCAAd;AACD;;AACD,QAAMC,MAAM,GAAGJ,IAAI,CAACK,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AACA,MAAI,CAACD,MAAL,EAAa;AACXnB,IAAAA,OAAO,CAACkB,KAAR,CAAc,8BAAd;AACD;;AACD,SAAOF,UAAU,IAAIG,MAArB;AACD;;AAEH,eAAe,MAAME,UAAN,SAAyB3B,SAAzB,CAAmC;AAE9C4B,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAIlBC,KAJkB,GAIV;AACJC,MAAAA,OAAO,EAAE;AADL,KAJU;;AAAA,SAQlBC,YARkB,GAQHC,IAAI,IAAI;AACvB,UAAIA,IAAI,CAACZ,IAAL,CAAUa,MAAV,KAAqB,WAAzB,EAAsC;AAClC,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA;AACH;;AACD,UAAIE,IAAI,CAACZ,IAAL,CAAUa,MAAV,KAAqB,MAAzB,EAAiC;AAC7B;AACAtB,QAAAA,SAAS,CAACqB,IAAI,CAACZ,IAAL,CAAUe,aAAX,EAA0BC,QAAQ,IAC3C,KAAKF,QAAL,CAAc;AACVE,UAAAA,QADU;AAEVN,UAAAA,OAAO,EAAE;AAFC,SAAd,CADS,CAAT;AAMH;AACA,KAtBiB;AAEjB;;AAsBDO,EAAAA,MAAM,GAAE;AAEJ,UAAMC,YAAY,GACd;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,OAAX,GAAqB,SAArB,GAAiC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADJ;AAFI,UAQMM,QARN,GAQmB,KAAKP,KARxB,CAQMO,QARN;AAUJ,WACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,KAAK,EAAE9B,UAAU,CAACC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,QAAQ,EAAC,cAFb;AAGI,MAAA,SAAS,EAAC,iBAHd;AAII,MAAA,cAAc,EAAE,KAJpB;AAKI,MAAA,MAAM,EAAC,kDALX;AAMI,MAAA,YAAY,EAAEY,YANlB;AAOI,MAAA,QAAQ,EAAE,KAAKY,YAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASKK,QAAQ,GAAG;AAAK,MAAA,GAAG,EAAEA,QAAV;AAAoB,MAAA,GAAG,EAAC,QAAxB;AAAiC,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAmED,YAThF,CADJ,CADJ,CADJ,CADJ;AAmBH;;AAvD6C","sourcesContent":["import React, {Component} from 'react';\r\nimport { FilePond } from 'react-filepond';\r\nimport $ from 'jquery';\r\nimport axios from 'axios'\r\nimport { Upload, Icon, message } from 'antd';\r\n\r\nconst styleSheet = {\r\n    dropzone: {\r\n        backgroundColor: '#fcfcfc',\r\n        height: '200px',\r\n        color: '#000000',\r\n    }\r\n}\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n  \r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n\r\nexport default class LogoUpload extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    handleChange = info => {\r\n    if (info.file.status === 'uploading') {\r\n        this.setState({ loading: true });\r\n        return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n        // Get this url from response in real world.\r\n        getBase64(info.file.originFileObj, imageUrl =>\r\n        this.setState({\r\n            imageUrl,\r\n            loading: false,\r\n        }),\r\n        );\r\n    }\r\n    };\r\n\r\n    render(){\r\n\r\n        const uploadButton = (\r\n            <div className=\"plusbtn\">\r\n              <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n              <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n          );\r\n          const { imageUrl } = this.state;\r\n\r\n        return(\r\n            <div className=\"bg-white\">\r\n                <div className='dropzone bg-white' style={styleSheet.dropzone}>\r\n                    <div className=\"imageuplo\">\r\n                        <Upload\r\n                            name=\"avatar\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                            beforeUpload={beforeUpload}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                        </Upload>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}